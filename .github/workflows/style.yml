#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Style

on:
  pull_request:
    branches:
      - main
      - branch-*

concurrency:
  group: linter-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linter:
    name: Style check
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        profiles:
          - ''

    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
          cache: 'maven'
          check-latest: false
      - name: Setup Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Check kyuubi modules avaliable
        id: modules-check
        run: build/mvn dependency:resolve -DincludeGroupIds="org.apache.kyuubi" -DincludeScope="compile" -DexcludeTransitive=true ${{ matrix.profiles }}
        continue-on-error: true

      - name: Install
        # When a continue-on-error step fails, the outcome is failure, but the final conclusion is success.
        # for more details, please visit: https://github.com/actions/toolkit/issues/399#issuecomment-666147717
        if: steps.modules-check.conclusion == 'success' && steps.modules-check.outcome == 'failure'
        run: |
          MVN_OPT="-DskipTests -Dorg.slf4j.simpleLogger.defaultLogLevel=warn -Dmaven.javadoc.skip=true -Drat.skip=true -Dscalastyle.skip=true -Dspotless.check.skip"
          build/mvn clean install ${MVN_OPT}

      - name: Scalastyle with maven
        id: scalastyle-check
        run: build/mvn scalastyle:check ${{ matrix.profiles }}
      - name: Print scalastyle error report
        if: failure() && steps.scalastyle-check.outcome != 'success'
        run: >-
          for log in `find * -name "scalastyle-output.xml"`;
            do
              if grep -q "error" $log; then
                cat $log;
              fi
          done
      - name: Spotless style check
        run: |
          SPOTLESS_BLACK_VERSION=$(build/mvn help:evaluate -Dexpression=spotless.python.black.version -q -DforceStdout)
          pip install black==$SPOTLESS_BLACK_VERSION
          build/mvn spotless:check ${{ matrix.profiles }}
      - name: setup npm
        uses: actions/setup-node@v3
        with:
          node-version: 16

  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: check bin directory
        uses: ludeeus/action-shellcheck@master
        with:
          severity: error
